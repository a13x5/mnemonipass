* Mnemonipass

Password generator which generates passwords that are actually easy to remember.

** How it works

Mnemonipass generates passwords based on the phrase by chopping words in it down.
Phrases are easy to remember because they build based on how we (humans) are
building them.
Thus basic phrase consists of a noun followed by a verb and then another noun.
When more words used adjectives and adverbs are added. 
This makes phrase really easy to remember and since words are truncated there
no dictionary words in the actual password.

*** Examples

You can start with simplest phrase, like:
~hands forbid tomatoes~
Which will translate to the password: ~hanfortom~
This password has somewhat fine entropy of 42 bits, but we can do better

How about ~blissful hands never forbid beautiful tomatoes~ ?
Which will translate to: ~blihannevforbeatom~
This password already has 107 bits of entropy, which is fine more most applications.
But of course we can go further
~1 $ 7 Blissful Hands Never Forbid Beautiful Tomatoes~
This one translates to: ~1$7BliHanNevForBeaTom~
And this already has 129 bits of entropy, which is quite secure, even if it will be
brutforced with GPUs it will take inadequate amount of time to crack.
For comparison password with comparable entropy generated by ~pwgen~ will look like this:
~thaeGh4udaijo@uk5aith~ which not so easy to remember.

** How to use
To create simplest password you can run:
#+begin_src bash
  mnemonipass -n dicts/nouns.txt -v dicts/verbs.txt
#+end_src

And if you want to create something much more secure you can run the following:
#+begin_src bash
  mnemonipass -n dicts/nouns.txt -v dicts/verbs.txt -a dicts/adverbs.txt -j dicts/adjectives.txt -w 6 -d 3 -s
#+end_src

** Installation

Currently you'll have to compile it (or run in ~gsi~) from source.
To compile it you first will need to install the latest version of [[https://gambitscheme.org/][Gambit Scheme]], then run:
#+begin_src bash
  make
#+end_src

If you're using [[https://guix.gnu.org/][Guix]] you can build using it, just run:
#+begin_src bash
  make guix-build
#+end_src

** TODO [0/2]

- [ ] Better dictionaries. Current ones have some errors and not much words there.
  Some words are archaic and harder to remember for non-native speakers.
- [ ] Web version.
- [ ] Pre-Compiled binary in the releases.

** References

[[https://en.wikipedia.org/wiki/Password_strength#Entropy_as_a_measure_of_password_strength][Wikipedia article on password entropy]]
[[https://www.pleacher.com/mp/mlessons/algebra/entropy.html][Calculating Password Entropy]]
